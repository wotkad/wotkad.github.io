(()=>{var __webpack_modules__={6167:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ../node_modules/gsap/index.js + 2 modules\nvar gsap = __webpack_require__(9667);\n;// CONCATENATED MODULE: ./assets/js/base/preloader.js\n/* provided dependency */ var $ = __webpack_require__(5638);\n\nfunction renderPage() {\n  const render = $(\".render\");\n  gsap/* default.fromTo */.ZP.fromTo(render, 0.5, {\n    opacity: \"1\",\n    zIndex: \"99999\"\n  }, {\n    opacity: \"0\",\n    zIndex: \"-1\",\n    onComplete: () => {\n      render.remove();\n    }\n  }).delay(0.4);\n}\nrenderPage();\n// EXTERNAL MODULE: ./assets/js/base/checkInternalLinks.js\nvar checkInternalLinks = __webpack_require__(7902);\n// EXTERNAL MODULE: ../node_modules/@barba/core/dist/barba.umd.js\nvar barba_umd = __webpack_require__(5530);\nvar barba_umd_default = /*#__PURE__*/__webpack_require__.n(barba_umd);\n;// CONCATENATED MODULE: ./assets/js/base/isCurrentPage.js\n/* provided dependency */ var isCurrentPage_$ = __webpack_require__(5638);\nfunction isCurrentPage() {\n  const page = window.location.pathname;\n  if (page == page) {\n    isCurrentPage_$(`a[href=\"${page}\"]`).on(\"click\", function (e) {\n      e.preventDefault();\n    });\n    isCurrentPage_$(`a.header__link[href=\"${page}\"]`).addClass('active');\n  }\n}\nisCurrentPage();\n;// CONCATENATED MODULE: ./assets/js/base/currentYear.js\n/* provided dependency */ var currentYear_$ = __webpack_require__(5638);\nfunction currentYear() {\n  const currentYear = currentYear_$('.currentYear');\n  const currentTime = new Date();\n  const year = currentTime.getFullYear();\n  currentYear.text(year);\n}\ncurrentYear();\n;// CONCATENATED MODULE: ./assets/js/components/dark-theme.js\n/* provided dependency */ var dark_theme_$ = __webpack_require__(5638);\nfunction darkTheme() {\n  let button = dark_theme_$('.dark-theme');\n  let html = dark_theme_$('html');\n  button.on('click', function () {\n    html.toggleClass('dark');\n    if (html.hasClass('dark')) {\n      localStorage.theme = 'dark';\n    } else {\n      localStorage.theme = '';\n    }\n  });\n  if (localStorage.theme === 'dark') {\n    html.addClass('dark');\n  } else {\n    html.removeClass('dark');\n  }\n}\ndarkTheme();\n;// CONCATENATED MODULE: ./assets/js/components/expertise.js\n/* provided dependency */ var expertise_$ = __webpack_require__(5638);\nfunction expertise() {\n  let button = expertise_$('.expertise__item');\n  let container = expertise_$('.expertise__images img');\n  for (let i = 0; i < Array.from(button).length; i++) {\n    expertise_$(button[i]).on('mouseover', function () {\n      let id = button[i].getAttribute('data-id');\n      let block = expertise_$('.expertise__images img[data-id=\"' + id + '\"]');\n      container.removeClass('active');\n      expertise_$(block).attr('data-id', expertise_$(this).attr('data-id')).addClass('active');\n      button.removeClass('active');\n      expertise_$(this).addClass('active');\n    });\n  }\n}\nexpertise();\n// EXTERNAL MODULE: ../node_modules/swiper/swiper.esm.js + 88 modules\nvar swiper_esm = __webpack_require__(2638);\n;// CONCATENATED MODULE: ./assets/js/components/cta-slider.js\n\nfunction ctaSlider() {\n  new swiper_esm/* default */.ZP('.cta__slider', {\n    modules: [swiper_esm/* Autoplay */.pt],\n    initialSlide: 1,\n    slidesPerView: 5.5,\n    loop: true,\n    allowTouchMove: false,\n    speed: 10000,\n    autoplay: {\n      delay: 0\n    }\n  });\n}\nctaSlider();\n;// CONCATENATED MODULE: ./assets/js/components/services.js\n/* provided dependency */ var services_$ = __webpack_require__(5638);\nfunction services() {\n  let button = services_$('.services__link');\n  let container = services_$('.services__work');\n  for (let i = 0; i < Array.from(button).length; i++) {\n    services_$(button[i]).on('mouseover', function () {\n      let id = button[i].getAttribute('data-id');\n      let block = services_$('.services__work[data-id=\"' + id + '\"]');\n      container.removeClass('active');\n      services_$(block).attr('data-id', services_$(this).attr('data-id')).addClass('active');\n      button.removeClass('active');\n      services_$(this).addClass('active');\n    });\n  }\n}\nservices();\n;// CONCATENATED MODULE: ./assets/js/components/toggle-service-item.js\n/* provided dependency */ var toggle_service_item_$ = __webpack_require__(5638);\nfunction toggleServiceItem() {\n  let button = toggle_service_item_$('.service__item');\n  button.on('click', function () {\n    toggle_service_item_$(this).toggleClass('active');\n    toggle_service_item_$(this).children('.service__text').slideToggle(600, 'swing');\n    button.not(this).removeClass('active');\n    button.not(this).children('.service__text').slideUp(600, 'swing');\n  });\n}\ntoggleServiceItem();\n;// CONCATENATED MODULE: ./assets/js/components/works-slider.js\n\nfunction worksSlider() {\n  new swiper_esm/* default */.ZP('.works-slider__slider', {\n    modules: [swiper_esm/* Autoplay */.pt],\n    slidesPerView: 2.5,\n    loop: true,\n    spaceBetween: 21,\n    allowTouchMove: false,\n    speed: 8000,\n    autoplay: {\n      delay: 0\n    }\n  });\n}\nworksSlider();\n// EXTERNAL MODULE: ../node_modules/@splidejs/splide/dist/js/splide.esm.js\nvar splide_esm = __webpack_require__(4356);\n;// CONCATENATED MODULE: ./assets/js/components/hero-slider-centered.js\n/* provided dependency */ var hero_slider_centered_$ = __webpack_require__(5638);\n\nfunction heroSliderCentered() {\n  let options = {\n    type: 'loop',\n    padding: '22%',\n    perPage: 1,\n    gap: 24,\n    speed: 1000,\n    arrows: false,\n    pagination: false\n  };\n  let splide;\n  if (hero_slider_centered_$('.splide').length) {\n    splide = new splide_esm/* default */.ZP('.splide', options).mount();\n  }\n  hero_slider_centered_$('.splide__slide').on('click', function () {\n    let active = hero_slider_centered_$('.splide__slide.is-active');\n    let target = hero_slider_centered_$(this);\n    let activeId = active.data('index');\n    let targetId = target.data('index');\n    let cloneClass = target.hasClass('splide__slide--clone');\n    hero_slider_centered_$('.splide__slide').removeClass('is-active');\n    if (targetId > activeId && cloneClass) {\n      splide.go('<');\n    } else if (targetId < activeId && cloneClass) {\n      splide.go('>');\n    } else if (targetId > activeId) {\n      splide.go('>');\n    } else if (targetId < activeId) {\n      splide.go('<');\n    }\n  });\n}\nheroSliderCentered();\n;// CONCATENATED MODULE: ./assets/js/base/isInViewport.js\n/* provided dependency */ var isInViewport_$ = __webpack_require__(5638);\nfunction areElementsInViewport(elements) {\n  let viewportHeight = isInViewport_$(window).height();\n  let elementsVisibleFromTop = [];\n  elements.each(function () {\n    let rect = this.getBoundingClientRect();\n    let isVisibleFromTop = rect.top >= 0 && rect.top < viewportHeight;\n    elementsVisibleFromTop.push({\n      element: this,\n      isVisible: isVisibleFromTop\n    });\n  });\n  return elementsVisibleFromTop;\n}\n// EXTERNAL MODULE: ../node_modules/smooth-scrollbar/index.js + 37 modules\nvar smooth_scrollbar = __webpack_require__(3697);\n;// CONCATENATED MODULE: ./assets/js/components/custom-scroll.js\n/* provided dependency */ var custom_scroll_$ = __webpack_require__(5638);\n\nconst scrollbar = smooth_scrollbar/* default.init */.Z.init(document.getElementById('main-scrollbar'));\nfunction fixedHeader() {\n  let header = custom_scroll_$('.header');\n  function checker(status) {\n    if (status !== 0) {\n      header.addClass('active');\n    } else {\n      header.removeClass('active');\n    }\n  }\n  checker(scrollbar.scrollTop);\n  scrollbar.addListener(status => {\n    checker(status.offset.y);\n  });\n}\nfixedHeader();\nfunction checkNavInit() {\n  let header = custom_scroll_$('.header');\n  let prevScrollpos = scrollbar.scrollTop;\n  function checker(status) {\n    let currentScrollPos = status;\n    if (prevScrollpos > currentScrollPos) {\n      header.removeClass('scrolled');\n    } else {\n      header.addClass('scrolled');\n    }\n    if (status <= 0) {\n      header.removeClass('scrolled');\n    }\n    prevScrollpos = currentScrollPos;\n  }\n  scrollbar.addListener(status => {\n    checker(status.offset.y);\n  });\n}\ncheckNavInit();\n/* harmony default export */ const custom_scroll = (scrollbar);\n;// CONCATENATED MODULE: ./assets/js/base/reveal.js\n/* provided dependency */ var reveal_$ = __webpack_require__(5638);\n\n\nfunction isInViewportChecker() {\n  let myElements = reveal_$('.reveal, .reveal-left, .reveal-right');\n  let elementsInViewport = areElementsInViewport(myElements);\n  for (var i = 0; i < elementsInViewport.length; i++) {\n    let elementData = elementsInViewport[i];\n    if (elementData.isVisible) {\n      reveal_$(elementData.element).addClass('revealed');\n    }\n  }\n}\ncustom_scroll.addListener(() => {\n  isInViewportChecker();\n});\nisInViewportChecker();\n;// CONCATENATED MODULE: ./assets/js/base/routing/routingFunctions.js\n\n\n\n\n\n\n\n\n\n\nfunction routingFunctions() {\n  isCurrentPage();\n  currentYear();\n  darkTheme();\n  expertise();\n  ctaSlider();\n  services();\n  toggleServiceItem();\n  worksSlider();\n  heroSliderCentered();\n  isInViewportChecker();\n}\n;// CONCATENATED MODULE: ./assets/js/components/send-mail.js\n/* provided dependency */ var send_mail_$ = __webpack_require__(5638);\nfunction sendMail(selector) {\n  function getValues() {\n    const services = [];\n    const inputs = send_mail_$('.contact__select input:checked');\n    for (const input of inputs) {\n      services.push(input.value);\n    }\n    return services;\n  }\n  let formData = new FormData(send_mail_$(selector).get(0));\n  let data = JSON.stringify(getValues()).replace('[', '').replace(']', '').replace(',', ', ');\n  if (data) {\n    formData.append('services', data);\n  }\n  return fetch('/assets/files/mail.php', {\n    method: 'POST',\n    body: formData\n  });\n}\n;\n;// CONCATENATED MODULE: ./assets/js/components/success-message.js\n/* provided dependency */ var success_message_$ = __webpack_require__(5638);\n\nfunction successMessage() {\n  let oldContainer = success_message_$('.contact__content');\n  let newContainer = success_message_$('.contact__success');\n  let animationWrapper = success_message_$('.contact__animation');\n  let shiftWidth = success_message_$('.contact__wrapper').width() - success_message_$('.contact__animation').width();\n  oldContainer.fadeOut(function () {\n    gsap/* gsap.to */.p8.to(animationWrapper, {\n      x: shiftWidth,\n      duration: 1,\n      onComplete: () => {\n        gsap/* gsap.to */.p8.to(animationWrapper, {\n          'transform': 'translate(0,0)',\n          duration: 0\n        });\n        newContainer.fadeIn();\n      }\n    });\n  });\n}\n;// CONCATENATED MODULE: ./assets/js/components/error-message.js\n/* provided dependency */ var error_message_$ = __webpack_require__(5638);\nfunction errorMessage(text) {\n  let container = error_message_$('.error-alert');\n  let content = error_message_$('.error-alert__text');\n  container.addClass('active');\n  content.text(text);\n  setTimeout(function () {\n    container.removeClass('active');\n  }, 2000);\n}\n;// CONCATENATED MODULE: ./assets/js/components/send-form.js\n/* provided dependency */ var send_form_$ = __webpack_require__(5638);\n\n\n\nfunction sendForm() {\n  let inputs = send_form_$('.contact__input');\n  let policyInput = send_form_$('.contact__policy input');\n  const validateName = name => {\n    if (name.length >= 2 && name.length < 50) {\n      return name.match(/^[а-яА-Яa-zA-Z]/);\n    }\n  };\n  const validateEmail = email => {\n    return email.match(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  };\n  const validatedName = () => {\n    const name = send_form_$('input[name=\"name\"]').val();\n    if (validateName(name)) {\n      send_form_$('input[name=\"name\"]').removeClass('not-valid');\n    } else {\n      send_form_$('input[name=\"name\"]').addClass('not-valid');\n    }\n    if (name == '') {\n      send_form_$('input[name=\"name\"]').removeClass('not-valid');\n    }\n    return false;\n  };\n  const validatedEmail = () => {\n    const email = send_form_$('input[name=\"email\"]').val();\n    if (validateEmail(email)) {\n      send_form_$('input[name=\"email\"]').removeClass('not-valid');\n    } else {\n      send_form_$('input[name=\"email\"]').addClass('not-valid');\n    }\n    if (email == '') {\n      send_form_$('input[name=\"email\"]').removeClass('not-valid');\n    }\n    return false;\n  };\n  send_form_$('input[name=\"name\"]').on('input', validatedName);\n  send_form_$('input[name=\"email\"]').on('input', validatedEmail);\n  send_form_$('.contact__input').on('input', function () {\n    if (send_form_$(this).val()) {\n      send_form_$(this).addClass('active');\n    } else {\n      send_form_$(this).removeClass('active');\n    }\n  });\n  policyInput.on('input', function () {\n    if (send_form_$(this).prop('checked')) {\n      send_form_$(this).removeClass('not-valid');\n    }\n  });\n  function sendPopupForm() {\n    let form = send_form_$('.contact__form');\n    let button = send_form_$('.contact__submit button');\n    button.on('click', function () {\n      if (!policyInput.prop('checked')) {\n        policyInput.addClass('not-valid');\n      } else {\n        policyInput.removeClass('not-valid');\n      }\n      Array.from(inputs).forEach(function (input) {\n        if (!send_form_$(input).val()) {\n          send_form_$(input).addClass('not-valid');\n        }\n      });\n    });\n    if (form) {\n      form.submit(function (e) {\n        e.preventDefault();\n        if (!send_form_$('input[name=\"name\"]').hasClass('not-valid') && !send_form_$('input[name=\"email\"]').hasClass('not-valid') && !send_form_$('input[name=\"policy\"]').hasClass('not-valid')) {\n          sendMail(form).then(function () {\n            form.get(0).reset();\n            send_form_$('input').removeClass('not-valid');\n            return successMessage();\n          });\n        } else {\n          errorMessage('Form error!');\n        }\n      });\n    }\n  }\n  sendPopupForm();\n  function copyEmail() {\n    let button = send_form_$('.contact__copy__button');\n    button.on('click', function () {\n      let copyText = send_form_$(this).next();\n      let textArea = document.createElement(\"textarea\");\n      textArea.value = copyText.text();\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand(\"Copy\");\n      textArea.remove();\n    });\n  }\n  copyEmail();\n  send_form_$('input[type=\"tel\"]').on('keydown', function (e) {\n    if (e.key.length == 1 && e.key.match(/[^0-9'\".]/)) {\n      return false;\n    }\n  });\n}\nsetTimeout(function () {\n  sendForm();\n}, 100);\n;// CONCATENATED MODULE: ./assets/js/base/routing/routing.js\n/* provided dependency */ var routing_$ = __webpack_require__(5638);\n\n\n\n\n\n\n\nbarba_umd_default().use((barba_umd_default()));\n\n// Если header в находится barba-wrapper, то скрипт ниже не нужен.\nbarba_umd_default().hooks.beforeLeave(data => {\n  const nextPath = data.next.url.path;\n  const nextItem = routing_$(`a.header__link[href=\"${nextPath}\"]`);\n  routing_$(`a.header__link.${\"active\"}`).removeClass(\"active\");\n  nextItem.addClass(\"active\");\n});\nbarba_umd_default().init({\n  preventRunning: true,\n  requestError: (trigger, action, url, response) => {\n    if (action === \"click\" && response.status && response.status === 404) {\n      barba_umd_default().go(\"/404\");\n    }\n    return false;\n  },\n  transitions: [{\n    name: \"opacity-transition\",\n    leave(data) {\n      routing_$(data.current.container).addClass('blured');\n      return gsap/* default.to */.ZP.to(data.current.container, 1, {\n        opacity: 0\n      });\n    },\n    afterLeave(data) {\n      routing_$(data.next.container).addClass('blured');\n      custom_scroll.scrollTo(0, 0, 0);\n      return gsap/* default.to */.ZP.to(data.current.container, 0, {\n        display: 'none'\n      });\n    },\n    enter(data) {\n      routingFunctions();\n      routing_$(data.next.container).removeClass('blured');\n      return gsap/* default.from */.ZP.from(data.next.container, 1, {\n        opacity: 0\n      });\n    },\n    after() {\n      sendForm();\n    },\n    afterEnter() {\n      darkTheme();\n    }\n  }]\n});\n// EXTERNAL MODULE: ../node_modules/smooth-scroll/dist/smooth-scroll.polyfills.min.js\nvar smooth_scroll_polyfills_min = __webpack_require__(3872);\nvar smooth_scroll_polyfills_min_default = /*#__PURE__*/__webpack_require__.n(smooth_scroll_polyfills_min);\n;// CONCATENATED MODULE: ./assets/js/base/smoothScroll.js\n/* provided dependency */ var smoothScroll_$ = __webpack_require__(5638);\n\nfunction smoothScroll() {\n  new (smooth_scroll_polyfills_min_default())('a[href*=\"#\"]', {\n    speed: 500,\n    after: function () {\n      smoothScroll_$(\"body\").css(\"overflow\", \"\");\n    }\n  });\n}\nsmoothScroll();\n// EXTERNAL MODULE: ./assets/js/base/checkTarget.js\nvar checkTarget = __webpack_require__(1603);\n// EXTERNAL MODULE: ./assets/js/base/getHeaderHeight.js\nvar getHeaderHeight = __webpack_require__(1745);\n;// CONCATENATED MODULE: ./assets/js/components/cookie.js\n/* provided dependency */ var cookie_$ = __webpack_require__(5638);\nfunction cookie() {\n  let button = cookie_$('.cookie button');\n  let container = cookie_$('.cookie');\n  if (localStorage.cookieEntra !== undefined) {\n    container.hide();\n  }\n  button.on('click', function () {\n    container.fadeOut(700, function () {\n      localStorage.cookieEntra = true;\n    });\n  });\n}\ncookie();\n;// CONCATENATED MODULE: ./assets/js/app.js\n// #################################\n\n// Разработано на: RISE PROJECT\n// Разработчик: WOTKAD\n// Сайт: WOTKAD.RU\n// Сайт проекта: WOTKAD.RU/RISE\n\n// #################################\n\n// $('body,html').animate({scrollTop: 0}, 100);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6167\n")},7902:(__unused_webpack_module,__unused_webpack_exports,__webpack_require__)=>{eval('/* provided dependency */ var $ = __webpack_require__(5638);\nfunction checkInternalLinks() {\n  const links = $("a[href^=\'/\']");\n  Array.from(links).forEach(link => {\n    fetch(link.href, {\n      mode: "cors",\n      headers: {\n        "Content-Type": "application/json;charset=utf-8"\n      }\n    }).then(function (response) {\n      if (response.status == 404) {\n        $(link).attr("href", "/404");\n      }\n    });\n  });\n}\ncheckInternalLinks();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzkwMi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0Esa0JBQWtCQSxDQUFBLEVBQUc7RUFDNUIsTUFBTUMsS0FBSyxHQUFHQyxDQUFDLENBQUMsY0FBYyxDQUFDO0VBQy9CQyxLQUFLLENBQUNDLElBQUksQ0FBQ0gsS0FBSyxDQUFDLENBQUNJLE9BQU8sQ0FBRUMsSUFBSSxJQUFLO0lBQ2xDQyxLQUFLLENBQUNELElBQUksQ0FBQ0UsSUFBSSxFQUFFO01BQ2ZDLElBQUksRUFBRSxNQUFNO01BQ1pDLE9BQU8sRUFBRTtRQUNQLGNBQWMsRUFBRTtNQUNsQjtJQUNGLENBQUMsQ0FBQyxDQUFDQyxJQUFJLENBQUMsVUFBVUMsUUFBUSxFQUFFO01BQzFCLElBQUlBLFFBQVEsQ0FBQ0MsTUFBTSxJQUFJLEdBQUcsRUFBRTtRQUMxQlgsQ0FBQyxDQUFDSSxJQUFJLENBQUMsQ0FBQ1EsSUFBSSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUM7TUFDOUI7SUFDRixDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSjtBQUNBZCxrQkFBa0IsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vYXNzZXRzL2pzL2Jhc2UvY2hlY2tJbnRlcm5hbExpbmtzLmpzP2MxMjIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gY2hlY2tJbnRlcm5hbExpbmtzKCkge1xuICBjb25zdCBsaW5rcyA9ICQoXCJhW2hyZWZePScvJ11cIik7XG4gIEFycmF5LmZyb20obGlua3MpLmZvckVhY2goKGxpbmspID0+IHtcbiAgICBmZXRjaChsaW5rLmhyZWYsIHtcbiAgICAgIG1vZGU6IFwiY29yc1wiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOFwiLFxuICAgICAgfSxcbiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSA0MDQpIHtcbiAgICAgICAgJChsaW5rKS5hdHRyKFwiaHJlZlwiLCBcIi80MDRcIik7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuY2hlY2tJbnRlcm5hbExpbmtzKCk7XG4iXSwibmFtZXMiOlsiY2hlY2tJbnRlcm5hbExpbmtzIiwibGlua3MiLCIkIiwiQXJyYXkiLCJmcm9tIiwiZm9yRWFjaCIsImxpbmsiLCJmZXRjaCIsImhyZWYiLCJtb2RlIiwiaGVhZGVycyIsInRoZW4iLCJyZXNwb25zZSIsInN0YXR1cyIsImF0dHIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7902\n')},1603:(__unused_webpack_module,__unused_webpack_exports,__webpack_require__)=>{eval("/* provided dependency */ var $ = __webpack_require__(5638);\nfunction checkTarget() {\n  $(document.links).filter(function () {\n    return this.hostname != window.location.hostname;\n  }).attr('target', '_blank');\n}\ncheckTarget();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYwMy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EsV0FBV0EsQ0FBQSxFQUFHO0VBQ3JCQyxDQUFDLENBQUNDLFFBQVEsQ0FBQ0MsS0FBSyxDQUFDLENBQUNDLE1BQU0sQ0FBQyxZQUFXO0lBQ2xDLE9BQU8sSUFBSSxDQUFDQyxRQUFRLElBQUlDLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDRixRQUFRO0VBQ2xELENBQUMsQ0FBQyxDQUFDRyxJQUFJLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQztBQUM3QjtBQUNBUixXQUFXLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Fzc2V0cy9qcy9iYXNlL2NoZWNrVGFyZ2V0LmpzP2U3OTAiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gY2hlY2tUYXJnZXQoKSB7XG4gICQoZG9jdW1lbnQubGlua3MpLmZpbHRlcihmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5ob3N0bmFtZSAhPSB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWU7XG4gIH0pLmF0dHIoJ3RhcmdldCcsICdfYmxhbmsnKTtcbn1cbmNoZWNrVGFyZ2V0KCk7Il0sIm5hbWVzIjpbImNoZWNrVGFyZ2V0IiwiJCIsImRvY3VtZW50IiwibGlua3MiLCJmaWx0ZXIiLCJob3N0bmFtZSIsIndpbmRvdyIsImxvY2F0aW9uIiwiYXR0ciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1603\n")},1745:(__unused_webpack_module,__unused_webpack_exports,__webpack_require__)=>{eval("/* provided dependency */ var $ = __webpack_require__(5638);\nfunction getHeaderHeight() {\n  let height = $('.header').outerHeight();\n  document.documentElement.style.setProperty('--header-height', `${height}px`);\n}\ngetHeaderHeight();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc0NS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EsZUFBZUEsQ0FBQSxFQUFHO0VBQ3pCLElBQUlDLE1BQU0sR0FBR0MsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUN2Q0MsUUFBUSxDQUFDQyxlQUFlLENBQUNDLEtBQUssQ0FBQ0MsV0FBVyxDQUFDLGlCQUFpQixFQUFHLEdBQUVOLE1BQU8sSUFBRyxDQUFDO0FBQzlFO0FBQ0FELGVBQWUsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vYXNzZXRzL2pzL2Jhc2UvZ2V0SGVhZGVySGVpZ2h0LmpzP2VkMzQiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0SGVhZGVySGVpZ2h0KCkge1xuICBsZXQgaGVpZ2h0ID0gJCgnLmhlYWRlcicpLm91dGVySGVpZ2h0KCk7XG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1oZWFkZXItaGVpZ2h0JywgYCR7aGVpZ2h0fXB4YCk7XG59XG5nZXRIZWFkZXJIZWlnaHQoKTsiXSwibmFtZXMiOlsiZ2V0SGVhZGVySGVpZ2h0IiwiaGVpZ2h0IiwiJCIsIm91dGVySGVpZ2h0IiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJzdHlsZSIsInNldFByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1745\n")},109:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval("/* provided dependency */ var $ = __webpack_require__(5638);\n\n\n\n\n$(function () {\n  __webpack_require__(6167);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA5LmpzIiwibWFwcGluZ3MiOiI7QUFBb0I7QUFDUztBQUNDO0FBQ0k7QUFFbENBLENBQUMsQ0FBQyxZQUFZO0VBQ1pDLG1CQUFPLENBQUMsSUFBUSxDQUFDO0FBQ25CLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2J1bmRsZS5qcz8xYzk3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnc3dpcGVyL2Nzcyc7XG5pbXBvcnQgJ3N3aXBlci9jc3MvYXV0b3BsYXknO1xuaW1wb3J0ICdAc3BsaWRlanMvc3BsaWRlL2Nzcyc7XG5pbXBvcnQgXCIuL2Fzc2V0cy9zdHlsZXMvYXBwLnNjc3NcIjtcblxuJChmdW5jdGlvbiAoKSB7XG4gIHJlcXVpcmUoXCJqcy9hcHBcIik7XG59KTsiXSwibmFtZXMiOlsiJCIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///109\n")}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q].call(F.exports,F,F.exports,__webpack_require__),F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var s=1/0;for(i=0;i<deferred.length;i++){for(var[U,F,B]=deferred[i],n=!0,e=0;e<U.length;e++)(!1&B||s>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[e])))?U.splice(e--,1):(n=!1,B<s&&(s=B));if(n){deferred.splice(i--,1);var c=F();void 0!==c&&(Q=c)}}return Q}B=B||0;for(var i=deferred.length;i>0&&deferred[i-1][2]>B;i--)deferred[i]=deferred[i-1];deferred[i]=[U,F,B]},__webpack_require__.n=Q=>{var U=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(U,{a:U}),U},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},(()=>{var Q={296:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,s,[n,e,c]=F,i=0;if(n.some((U=>0!==Q[U]))){for(B in e)__webpack_require__.o(e,B)&&(__webpack_require__.m[B]=e[B]);if(c)var l=c(__webpack_require__)}for(U&&U(F);i<n.length;i++)s=n[i],__webpack_require__.o(Q,s)&&Q[s]&&Q[s][0](),Q[s]=0;return __webpack_require__.O(l)},F=self.webpackChunk=self.webpackChunk||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[723],(()=>__webpack_require__(109)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();